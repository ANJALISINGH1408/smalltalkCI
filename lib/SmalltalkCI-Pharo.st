SmalltalkCI subclass: #SmalltalkCIPharo	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'SmalltalkCI-Pharo'!!SmalltalkCIPharo methodsFor: 'private' stamp: 'EstebanLorenzano 1/26/2016 16:24'!readSTONSpec: aFilename	| reference |	reference := aFilename asFileReference.	projectDirectory := reference parent fullName.	spec :=  reference readStreamDo: [ :stream | 		SmalltalkCISpec fromStream: stream ]! !!SmalltalkCIPharo methodsFor: 'private' stamp: 'EstebanLorenzano 1/26/2016 16:06'!installDependencies	! !!SmalltalkCIPharo methodsFor: 'private' stamp: 'EstebanLorenzano 1/26/2016 15:45'!installSTON	Metacello new      	configuration: 'STON';      	version: #stable;      	repository: 'http://ss3.gemstone.com/ss/STON';      	load! !!SmalltalkCIPharo methodsFor: 'executing' stamp: 'EstebanLorenzano 1/26/2016 17:03'!testProject	HDTestReport runClasses: self classesToTest named: 'smalltalkCI'! !!SmalltalkCIPharo methodsFor: 'accessing' stamp: 'EstebanLorenzano 1/26/2016 18:23'!classesToTestFrom: aDictionary	| classes |	classes := Set new.				aDictionary at: #classes ifPresent: [ :classList |		classList do: [ :eachClass |			Smalltalk at: eachClass ifPresent: [ :class | classes add: class ] ] ].		aDictionary at: #packages ifPresent: [ :packagesList | | packages commandLineHandler |		packages := Set new.		commandLineHandler := TestCommandLineHandler new.		packagesList do: [ :each | 			commandLineHandler addPackagesMatching: each to: packages ].		packages do: [ :each | 			classes addAll: (RPackageOrganizer default packageNamed: each) definedClasses ] ].	^ classes		! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!SmalltalkCIPharo class	instanceVariableNames: ''!!SmalltalkCIPharo class methodsFor: 'helpers' stamp: 'EstebanLorenzano 1/26/2016 17:04'!runsHeadless	^ Smalltalk vm options includes: '--headless'! !!SmalltalkCIPharo class methodsFor: 'accessing' stamp: 'EstebanLorenzano 1/26/2016 17:36'!platformSymbol	^ #pharo! !