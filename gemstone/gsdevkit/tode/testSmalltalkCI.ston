TDScriptLeafNode{#name:'testSmalltalkCI',#contents:'[ :topez :objIn :tokens :command :commandNode | 
  | opts args |
  \"for help: ./testSmalltalkCI -h\"
  command
    getOptsMixedLongShort:
      {#(\'help\' $h #\'none\').
      #(\'filein\' nil #\'required\').
      #(\'test\' nil #\'required\').
      #(\'xml\' nil #\'required\').
      #(\'custom\' nil #\'required\').
      #(\'loadTests\' nil #\'required\')}
    optionsAndArguments: [ :options :operands | 
      opts := options.
      args := operands ].
  opts
    at: \'help\'
    ifAbsent: [ 
      | shellTool |
      shellTool := topez toolInstanceFor: \'mount\'.
      opts
        at: \'xml\'
        ifPresent: [ :arg | 
          | smalltalkCISpec projectDirectoryPath ciResult stonStream |
          stonStream := WriteStream on: String new.
          stonStream
            nextPutAll:
              \'SmalltalkCISpec {
  #loading : [
    SCIMetacelloLoadSpec {
      #baseline : \'\'SmalltalkCITests\'\',
      #directory : \'\'tests\'\',
      #platforms : [ #squeak, #pharo, #gemstone ]
    }
  ],
  #testing : {
    #exclude : {
      #classes : [ #SCIExcludedTests ]
    }
  }
}\'.
          smalltalkCISpec := SmalltalkCISpec
            fromStream: stonStream contents readStream.
          projectDirectoryPath := (shellTool resolveFilePath: arg) fullName.
          ciResult := SmalltalkCI
            runCIForSpec: smalltalkCISpec
            projectDirectory: projectDirectoryPath
            produceXMLLog: true ].
      opts
        at: \'filein\'
        ifPresent: [ :arg | 
          | chunkFileEntry |
          chunkFileEntry := shellTool resolveFilePath: arg.
          (BinaryOrTextFile openReadOnServer: chunkFileEntry fullName) fileIn ].
      opts
        at: \'loadTests\'
        ifPresent: [ :arg | 
          | reposFileEntry |
          reposFileEntry := shellTool resolveFilePath: arg.
          Metacello new
            baseline: \'SmalltalkCITests\';
            repository: \'filetree://\' , reposFileEntry fullName;
            load ].
      opts
        at: \'test\'
        ifPresent: [ :arg | 
          | smalltalkCISpec projectDirectoryPath ciResult |
          smalltalkCISpec := shellTool resolveAtPathReference: arg.
          projectDirectoryPath := (shellTool resolveAtPathNodeReference: arg)
            asTDLeafNode parent directoryEntry fullName.
          ciResult := SmalltalkCI
            runCIForSpec: smalltalkCISpec
            projectDirectory: projectDirectoryPath
            produceXMLLog: false ].
      opts
        at: \'custom\'
        ifPresent: [ :arg | 
          | smalltalkCISpec projectDirectoryPath ciResult |
          smalltalkCISpec := shellTool resolveAtPathReference: arg.
          true
            ifTrue: [ 
              projectDirectoryPath := (shellTool resolveAtPathNodeReference: arg) asTDLeafNode
                parent directoryEntry fullName.
              smalltalkCISpec testing removeKey: #\'exclude\' ifAbsent: [  ].
              ciResult := SmalltalkCI
                runCIForSpec: smalltalkCISpec
                projectDirectory: projectDirectoryPath ] ] ]
    ifPresent: [ :ignored | 
      TDManPage
        viewManPage:
          \'NAME
  testSmalltalkCI - testSmalltalkCI script utility template
SYNOPSIS
  testSmalltalkCI [-h|--help] [--filein=<file-path] [--loadTests=<test-repo-path>] \\
              [--test=<smalltalk.ston-file-path>] [--custom=<smalltalk.ston-file-path>]
DESCRIPTION
  First off, you should `mount` the gemstone/tode directory in the SmalltalkCI project:

    mount @/sys/stone/dirs/SmalltalkCI/gemstone/gsdevkit/tode/ /home smalltalkCI

EXAMPLES
  ./testSmalltalkCI -h

  /home/smalltalkCI/testSmalltalkCI --xml=@/sys/stone/dirs/SmalltalkCI

  /home/smalltalkCI/testSmalltalkCI --custom=@/sys/stone/dirs/SmalltalkCI/.smalltalk.ston
  /home/smalltalkCI/testSmalltalkCI --test=@/sys/stone/dirs/SmalltalkCI/.smalltalk.ston

  /home/smalltalkCI/testSmalltalkCI --loadTests=@/sys/stone/dirs/SmalltalkCI/tests

  /home/smalltalkCI/testSmalltalkCI --filein=@/sys/stone/dirs/SmalltalkCI/src/SmalltalkCI-Core.st
  /home/smalltalkCI/testSmalltalkCI --filein=@/sys/stone/dirs/SmalltalkCI/src/SmalltalkCI-Gemstone.st
  /home/smalltalkCI/testSmalltalkCI --filein=@/sys/stone/dirs/SmalltalkCI/src/SmalltalkCI-Report.st
\'
        topez: topez ] ]',#creationTime:DateAndTime['2016-02-05T15:27:21.5106348991394-08:00'],#modificationTime:DateAndTime['2016-02-05T15:28:37.1039159297943-08:00']}